#!/usr/bin/env python3

from math import factorial

import sys

class func:
    def __init__(self, abscissa, ordinate, pollution):
        self.x = abscissa 
        self.y = ordinate
        self.p = pollution

def final_print(result):
    print("%.2f" % result)

def calc_factorial(n, k, p):
    return int(factorial(n) / (factorial(k) * factorial(n - k))) * (pow(p, k)) * (pow((1 - p), (n - k)))

def calcul_tab(n_point, tab_point, abscissa, ordinate):
        result = 0
        grid = []
        for _ in range(0, n_point):
            grid.append([0] * n_point)
        for point in tab_point:
            grid[int(point.y)][int(point.x)] = point.p
        for i in range(n_point):
            for y in range(n_point):
                temp_res = calc_factorial(n_point-1, i, (ordinate/(n_point-1)))
                temp_res *= calc_factorial(n_point-1, y, (abscissa/(n_point-1)))
                temp_res *= grid[i][y]
                result += temp_res
        return result

def check_if_float(mylist):
    x = 0;
    for i in mylist:
        x += 1;
        try:
            if(x != 2):
                float(i)
        except ValueError:
            print ("Invalid argument")
            exit(84)

def print_all_func(tab_point):
    for i in tab_point:
        print ("%.2f" % i.x, "%.2f" % i.y, "%.2f" % i.p)
    print("*********\n")

def tab_from_file(file):
    tab_point = []
    try:
        with open(file, "r") as f:
            for line in f:
                temp_tab = []
                temp_tab.append(line.split(";"))
                if temp_tab[0][2][-1] == '\n':
                    temp_tab[0][2] = temp_tab[0][2][:-1]
                tab_point.append(func(float(temp_tab[0][0]), float(temp_tab[0][1]), float(temp_tab[0][2])))
    except IOError:
        print ("Invalid file")
        exit(84)
    return tab_point

def argcheck():
    if len(sys.argv) != 5:
        print ("ko")
        exit(84)
    check_if_float(sys.argv[1:6])

def check(tab_vector):
    x = 0
    for i in tab_vector:
        if (round(i, 1) == 0.0):
             tab_vector[x] = 0.0
        x += 1
    return tab_vector

def main():
    argcheck()
    n_point = int(sys.argv[1])
    file = sys.argv[2]
    abscissa = float(sys.argv[3])
    ordinate = float(sys.argv[4])
    tab_point = tab_from_file(file)
    result = calcul_tab(n_point, tab_point, abscissa, ordinate)
    final_print(result)

main()
exit(0)
